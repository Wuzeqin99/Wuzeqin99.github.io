<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小白的博客</title>
  
  <subtitle>成长之路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wuzeqin99.github.io/"/>
  <updated>2019-12-22T10:05:48.801Z</updated>
  <id>https://wuzeqin99.github.io/</id>
  
  <author>
    <name>Qin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浅谈香港问题</title>
    <link href="https://wuzeqin99.github.io/2019/12/22/%E6%B5%85%E8%B0%88%E9%A6%99%E6%B8%AF%E9%97%AE%E9%A2%98/"/>
    <id>https://wuzeqin99.github.io/2019/12/22/%E6%B5%85%E8%B0%88%E9%A6%99%E6%B8%AF%E9%97%AE%E9%A2%98/</id>
    <published>2019-12-22T10:14:44.000Z</published>
    <updated>2019-12-22T10:05:48.801Z</updated>
    
    <content type="html"><![CDATA[<pre><code>                                        #浅谈香港问题关于香港事件起因：2018年2月，香港少女潘晓颖与男友陈同佳赴台北共度情人节，在当地遭后者杀害，陈某随即逃回香港，女方银行账户的款项也被其提取。去年3月，陈某在港被捕，由于港台间没有签署移交逃犯协议，虽然他已承认在台杀害女友，台湾方面至今无法处理此案；而香港警方也只能对其在港处理被害人财物时犯下的洗黑钱罪进行起诉。今年4月29日，香港高等法院就陈某四项洗黑钱罪进行宣判，判处其29个月监禁。2019年2月，被害少女母亲（中）会见媒体，支持特区政府修例填补法律漏洞。香港2月13日正式启动修例程序，遭到香港的商界和法律界的反对。商界认为这有可能影响香港的营商环境，法律界认为修例会破坏香港的司法独立。6月以来，发生在香港的暴力活动不断升级。香港问题能在短短几个月的时间爆发如此之迅速，传播如此之广泛，可见香港问题背后必然有着更深的根源。那么是什么让这个曾经的世界金融中心之一沦落为一个滋养暴徒、“废青”的地方？政治角度：香港虽是中国的一部分，但与大陆实行不同的社会政策，也就是著名的“一国两制”，这使香港享受政策红利，进一步成为中国与世界经济沟通的一个重要港湾。但是这也使得各国的文化在香港传播，再加上香港本身的殖民历史使得香港人的“国家意识”浅薄，经过欧美国家“自由”的鼓动，便蜂拥而起。而在我看来，政治制度的问题是不可避免的，世界上任何一个国家或地区在改革政治体制的时候都是经过惨痛的代价（新中国成立，法国大革命），所以，香港的政治体制的改革，不可避免要经历一些伤痛。但是大陆政府也要积极得调整政策，采取行动，让体制变化带来的冲击变得缓和一点。经济角度：香港是中国与世界经济连接与沟通的一个不可替代的角色，这也得益于香港的政策红利、法律体系、以及香港的整体环境，但是香港作为一个金融中心，看似繁荣非凡，实则矛盾众多。首先就是平民与资本家的矛盾，我觉得香港充分的展示了“旱的旱死，涝的涝死”这句话。大企业家躺在高级写字楼里睡一觉就有大把大把钱赚，而一般的平民挤在几平米的房子了，为一日三餐奔波。香港的房子寸土寸金，我们都是上海、北京的房价已经是天价了，而香港更甚。这就是资本掌控市场的结果，毫无政府的干预或者说受政府干预少，房价无节制得上涨。而也正因为如此，整个地区的资金向房地产等产业倾斜。在我看来，这种经济结构是很不稳定的，一旦资本撤离，整个地区的经济就容易陷入瘫痪，银行没钱了，民众没工作了。而大陆以工业为主，相对稳定。教育角度：现在香港暴乱中的“暴徒”很大一部分是“废青”，这就说明香港的教育问题是显著的。大部分青年对“自由”都是一知半解的，他们看到的欧美国家繁荣的外表，而没有看清他们“自由”的根本。可以想象资本主义下的“自由”是资本的自由，而穷人，就“呵呵”。仔细想想美国经常爆出虐待黑人或是歧视黑人的新闻，而那些黑人有几个是有头有脸的。再者，香港之前是英国的殖民地，实行的是殖民化的教育，在校大学生要学语文、数学、英语、通识，而通识与政治、思想直接挂钩，然而，这样的一门学科在选教材使无需受审，这就给那些有歪心思的人提供了一条途径。但现在中央政府却迟迟没有对香港动手，依我之见，如果这时中国动手了，这就向全世界说“一国两制”是错的，是不合理的，这显然不是我们想看到的结果。中央在等，等着香港褪去“金融中心”的光环，外资纷纷撤离，香港经济后退，问题自然变得更加好解决。以上是我的拙见。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;                                        #浅谈香港问题
关于香港事件起因：2018年2月，香港少女潘晓颖与男友陈同佳赴台北共度情人节，在当地遭后者杀害，陈某随即逃回香港，女方银行账户的款项也被其提取。去年3月，陈某在港
      
    
    </summary>
    
    
      <category term="人文" scheme="https://wuzeqin99.github.io/categories/%E4%BA%BA%E6%96%87/"/>
    
    
      <category term="人文" scheme="https://wuzeqin99.github.io/tags/%E4%BA%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>一道简单的ACM</title>
    <link href="https://wuzeqin99.github.io/2019/12/20/%E4%B8%80%E9%81%93%E7%AE%80%E5%8D%95ACM/"/>
    <id>https://wuzeqin99.github.io/2019/12/20/%E4%B8%80%E9%81%93%E7%AE%80%E5%8D%95ACM/</id>
    <published>2019-12-20T10:14:44.000Z</published>
    <updated>2019-12-20T02:47:00.869Z</updated>
    
    <content type="html"><![CDATA[<p>#题目</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#题目&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="ACM" scheme="https://wuzeqin99.github.io/categories/ACM/"/>
    
    
      <category term="ACM" scheme="https://wuzeqin99.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>常用简单函数(c)</title>
    <link href="https://wuzeqin99.github.io/2019/12/20/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>https://wuzeqin99.github.io/2019/12/20/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</id>
    <published>2019-12-20T05:00:00.000Z</published>
    <updated>2019-12-21T06:51:31.279Z</updated>
    
    <content type="html"><![CDATA[<p><strong>最大公约数</strong> <code>int gcd(int a,int b){return !b?a:gcd(b,a%b);}</code></p><p><strong>排序</strong> </p><pre><code>    void sort(int *a, int n)//a为数组地址，l为数组长度。    {        int i, j;        int v;        //排序主体        for(i = 0; i &lt; n- 1; i ++)            for(j = i+1; j &lt; n; j ++)            {                if(a[i] &gt; a[j])//如前面的比后面的大，则交换。                {                    v = a[i];                    a[i] = a[j];                    a[j] = v;                }        }        return;    }</code></pre><p><strong>字符串的反转</strong></p><pre><code>    void reverse(char *a)    {        int n,i;        char temp;        cin &gt;&gt; a;        n=strlen(a);        for(i=0;i&lt;n/2;i++)        {        temp=a[i];        a[i]=a[n-i-1];        a[n-i-1]=temp;        }    }</code></pre><p><strong>简单计算器</strong></p><pre><code>    #include&lt;stdio.h&gt;    int main ()    {        int a,b,i,j;        char c,p=&#39;y&#39;;        while(p==&#39;y&#39; || p==&#39;Y&#39;)    {        scanf(&quot;%d %c %d&quot;,&amp;a,&amp;c,&amp;b);        if(c==&#39;+&#39;) i=1;        if(c==&#39;-&#39;) i=2;        if(c==&#39;*&#39;) i=3;        if(c==&#39;/&#39;) i=4;        switch(i)        {            case 1:                    printf(&quot;%.2f + %.2f = %.2f\n&quot;, (float)a, (float)b,(float)(a+b));                    break;            case 2:                    printf(&quot;%.2f - %.2f = %.2f\n&quot;, (float)a, (float)b,(float)(a-b));                    break;            case 3:                    printf(&quot;%.2f * %.2f = %.2f\n&quot;, (float)a, (float)b,(float)(a*b));                    break;            case 4:                if(b==0)                {                    printf(&quot;error\n&quot;);                    break;                }                    printf(&quot;%.2f / %.2f = %.2f\n&quot;, (float)a, (float)b,(float)(a)/(float)(b));                    break;            default:                printf(&quot;error\n&quot;);                break;        }        getchar();        p=getchar();    }    }</code></pre><p><strong>字符串的拷贝</strong></p><pre><code>    void my_strcpy(char * destination,char * source)    {        if(destination==NULL||source==NULL){            printf(&quot;error\n&quot;);            return;                }        int len=strlen(source);        for(int i=0;i&lt;len;++i)        if(source[i]==&#39; &#39;) len=i;        for(int i=0;i&lt;=len;++i)        destination[i]=source[i];        return;    }</code></pre><p><strong>字符串的连接</strong></p><pre><code>    void my_strcat(char * destination,const char * source)    {        int i=0,n=0,m=0;        if(destination==NULL || source==NULL)        {            printf(&quot;error&quot;);            return;        }        while(*(destination+i)!=&#39; &#39;)            {                i++;                n++;            }        i=0;        while(*(source+i)!=&#39; &#39;)        {            i++;            m++;        }        for(i=0;i&lt;m;i++)        {            *(destination+n+i)=*(source+i);            *(destination+n+m)=&#39; &#39;;        }    }</code></pre><p><strong>字符串的内部增加字符串</strong></p><pre><code>    void insert(char * s1,char * s2, int n)    {        char s4[3000];        char *s3 = s4;        int i=0,n_s2=0,n_s1=0,k=0,j=0;        if(s1==NULL || s2==NULL )        {            printf(&quot;error&quot;);            return;        }        while(*(s1+i)!=&#39; &#39;)        {            i++;            n_s1++;        }        if(n&gt;n_s1)         {            printf(&quot;error&quot;);            return;        }        i=0;        while(*(s2+i)!=&#39; &#39;)        {            i++;            n_s2++;        }        for (int i = 0; i&lt;n; i++)         {             j++;         }        for (int i= 0; i&lt;n_s1; i++)        {             s4[k++] = s1[i];        }        for (int i = 0; i&lt;n_s2; i++)            s1[j++] = s2[i];        for(int i=n;i&lt;n_s1;i++)            s1[j++]=s4[i];        s1[j] = &#39; &#39;;    }</code></pre><p><strong>字符串的内部删除字符串</strong></p><pre><code>    void del(char * s,int n,int len)    {        char s4[3000];        int i=0,m=0,p=0,len_s=0;        if(s==NULL || n&lt;0)        {            printf(&quot;error&quot;);            return;        }        while(*(s+i)!=&#39; &#39;)        {            i++;            len_s++;        }        if(n&gt;len_s-1 || len&gt;len_s || (n+len)&gt;len_s || len&lt;0)        {            printf(&quot;error&quot;);            return;        }        if(n==0 &amp;&amp; len==len_s)        {            *s=&#39; &#39;;            return;        }        for(i=n;i&lt;len_s-len;i++)            s[i]=s[i+len];        s[len_s-len]=&#39; &#39;;    }</code></pre><p><strong><em>实时更新</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;最大公约数&lt;/strong&gt; &lt;code&gt;int gcd(int a,int b){return !b?a:gcd(b,a%b);}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;排序&lt;/strong&gt; &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    void sor
      
    
    </summary>
    
    
      <category term="function" scheme="https://wuzeqin99.github.io/categories/function/"/>
    
    
      <category term="function" scheme="https://wuzeqin99.github.io/tags/function/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭载blog</title>
    <link href="https://wuzeqin99.github.io/2019/12/10/Hexo%E6%90%AD%E8%BD%BD%E5%8D%9A%E5%AE%A2/"/>
    <id>https://wuzeqin99.github.io/2019/12/10/Hexo%E6%90%AD%E8%BD%BD%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-12-10T05:00:00.000Z</published>
    <updated>2019-12-20T03:32:23.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么-你也想搞一个自己的博客"><a href="#什么-你也想搞一个自己的博客" class="headerlink" title="什么 你也想搞一个自己的博客"></a>什么 你也想搞一个自己的博客</h1><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1575963212091&di=97c912ba9ca371d118e1bc45b0a1076f&imgtype=jpg&src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fw%3D580%2Fsign%3D6c3ac5534b086e066aa83f4332097b5a%2Fc620c61fbe096b63228707320b338744eaf8ac99.jpg" alt=""></p><p><strong>follow me</strong></p><ol><li><p><strong><em>下载nodejs</em></strong><br>(nodejs)(<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a>)<br><img src="/images/1.png" alt=""><br><img src="/images/2.png" alt="一路 next"></p></li><li><p><strong><em>下载git</em></strong><br>(百度网盘)(<a href="https://pan.baidu.com/s/1PWKp3opV16zvSHHKve_x7A" target="_blank" rel="noopener">https://pan.baidu.com/s/1PWKp3opV16zvSHHKve_x7A</a>)<br>提取码：seqq<br>ps：也可官网下载 只是速度太慢(官网)(<a href="https://git-scm.com" target="_blank" rel="noopener">https://git-scm.com</a>)</p></li><li><p><strong><em>github</em></strong><br>(<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>)<br>如果没有账号注册一个<br><img src="/images/3.png" alt="注册成功后"><br><img src="/images/4.png" alt="创建一个仓库"></p></li></ol><p>*<em>注意：username一定要是自己的GitHub的用户名 *</em></p><p>4.<strong><em>githubSSH的配置</em></strong><br>打开下载的git Bash<br><img src="/images/5.png" alt=""><br>输入<br>       <code>ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot;</code><br>一直空格<br>之后 在磁盘中寻找 id_rsa.pub 文件 用记事本打开 复制里面的ssh<br>打开GitHub，登入自己的账号然后选择<br><img src="/images/6.png" alt=""><br>title栏填写<em>hojuntech</em><br>下面的粘贴复制的ssh</p><p>5.建立文件夹和本地网站<br>建一个文件夹<br>用win+r打开运行，输入cmd打开<img src="/images/7.png" alt=""><br>进入到新建的文件夹目录下 如输入<code>d:</code>进入d盘 输入 <code>cd blog</code>进入blog文件夹<br>之后输入<code>npm install hexo-cli -g</code> 等待下载。。。。 如果卡了 建议重开<br>然后输入<code>hexo init 文件夹名称</code> Waiting….<br>安装：输入<code>npm install</code><br>运行！输入<code>hexo s -p 4000</code> 你就能在浏览器上输入localhost：4000访问新建的blog了</p><p>6.发布<br>打开博客文件夹下的_config.yml 建议用sumline打开（不知道的怎么用的可以上b站或者用notepad++也行）<br>拉到最后修改：<br>    <img src="/images/8.png" alt=""><br>这里的用户名要改成自己的<br>再拉到第二行 修改url如图<br>    <img src="/images/9.png" alt=""><br>这里的用户名也要改</p><p>7.起飞！！！<br>在cmd命令中输入<code>hexo g -d</code> 等待部署完后 即可访问 username.github.io来看自己的博客辣</p><p>8.创作！<br>打开博客的本地文件夹打开source中的_post建立md文件，再用markdown的格式写文章<br>完成后用cmd运行<code>hexo g -d</code>命令就是自己的博文了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么-你也想搞一个自己的博客&quot;&gt;&lt;a href=&quot;#什么-你也想搞一个自己的博客&quot; class=&quot;headerlink&quot; title=&quot;什么 你也想搞一个自己的博客&quot;&gt;&lt;/a&gt;什么 你也想搞一个自己的博客&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://timg
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://wuzeqin99.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://wuzeqin99.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo的编辑</title>
    <link href="https://wuzeqin99.github.io/2019/12/09/hexo%E7%9A%84%E7%BC%96%E8%BE%91/"/>
    <id>https://wuzeqin99.github.io/2019/12/09/hexo%E7%9A%84%E7%BC%96%E8%BE%91/</id>
    <published>2019-12-09T10:14:44.000Z</published>
    <updated>2019-12-20T03:43:08.428Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写作介绍"><a href="#写作介绍" class="headerlink" title="写作介绍"></a>写作介绍</h1><h2 id="1-字体介绍"><a href="#1-字体介绍" class="headerlink" title="1.字体介绍"></a>1.字体介绍</h2><p><em>这是斜体</em> 或 <em>这也是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是加粗斜体</em></strong><br><del>这是删除线</del></p><h2 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="3，超链接"><a href="#3，超链接" class="headerlink" title="3，超链接"></a>3，超链接</h2><p>写法：</p><p>行内形式：<a href="https://wuzeqin99.github.io/">我的博客</a><br>参考形式：[我的博客][1],有一个很好的平台-[简书][2]<br>[1]:<a href="https://wuzeqin99.github.io/">https://wuzeqin99.github.io/</a><br>[2]:<a href="http://www.jianshu.com/" target="_blank" rel="noopener">http://www.jianshu.com/</a><br>自动链接：我的博客地址<a href="https://wuzeqin99.github.io/">https://wuzeqin99.github.io/</a></p><h2 id="4-列表"><a href="#4-列表" class="headerlink" title="4,列表"></a>4,列表</h2><p>无序列表：<br>写法：</p><ul><li>无序列表项1</li></ul><ul><li>无序列表项2</li></ul><ul><li>无序列表项3</li></ul><p>有序列表：<br>写法：<br>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p><h2 id="5，插入图片"><a href="#5，插入图片" class="headerlink" title="5，插入图片"></a>5，插入图片</h2><p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2655650851,1074400700&fm=26&gp=0.jpg" alt="1."></p><p>这是以上内容的代码</p><pre><code>    # 写作介绍    ## 1.字体介绍    *这是斜体* 或 _这也是斜体_    这是粗体**        ***这是加粗斜体***    ~~这是删除线~~    ## 2. 分级标题    # 一级标题    ## 二级标题    ### 三级标题        ##### 五级标题    ###### 六级标题    ## 3，超链接    写法：    行内形式：[我的博客](https://wuzeqin99.github.io/)    参考形式：[我的博客][1],有一个很好的平台-[简书][2]    [1]:https://wuzeqin99.github.io/    [2]:http://www.jianshu.com/    自动链接：我的博客地址&lt;https://wuzeqin99.github.io/&gt;    ## 4,列表    无序列表：    写法：    * 无序列表项1    + 无序列表项2    - 无序列表项3    有序列表：    写法：    1.有序列表项1    2.有序列表项2    3.有序列表项3    ## 5，插入图片    ![1.](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2655650851,1074400700&amp;fm=26&amp;gp=0.jpg)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写作介绍&quot;&gt;&lt;a href=&quot;#写作介绍&quot; class=&quot;headerlink&quot; title=&quot;写作介绍&quot;&gt;&lt;/a&gt;写作介绍&lt;/h1&gt;&lt;h2 id=&quot;1-字体介绍&quot;&gt;&lt;a href=&quot;#1-字体介绍&quot; class=&quot;headerlink&quot; title=&quot;1.字体介
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://wuzeqin99.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://wuzeqin99.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>CTF-PHP</title>
    <link href="https://wuzeqin99.github.io/2019/12/09/ctf-PHP1/"/>
    <id>https://wuzeqin99.github.io/2019/12/09/ctf-PHP1/</id>
    <published>2019-12-09T10:14:44.000Z</published>
    <updated>2019-12-22T10:09:24.101Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://123.206.31.85:10001/code.png" alt="题目"></p><p>一道简单的考核PHP知识<br>其中：<a href="https://www.w3school.com.cn/php/func_array_extract.asp" target="_blank" rel="noopener">extract()</a><br>      <a href="https://www.w3school.com.cn/php/func_string_trim.asp" target="_blank" rel="noopener">trim()</a><br>      <a href="https://www.runoob.com/php/func-filesystem-file-get-contents.html" target="_blank" rel="noopener">file_get_contents()</a></p><p>知道以上函数的作用后就知道在URL后简单加一个  <code>?a=</code> 便得出答案</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://123.206.31.85:10001/code.png&quot; alt=&quot;题目&quot;&gt;&lt;/p&gt;
&lt;p&gt;一道简单的考核PHP知识&lt;br&gt;其中：&lt;a href=&quot;https://www.w3school.com.cn/php/func_array_ex
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://wuzeqin99.github.io/categories/CTF/"/>
    
    
      <category term="CTF-PHP" scheme="https://wuzeqin99.github.io/tags/CTF-PHP/"/>
    
  </entry>
  
</feed>
